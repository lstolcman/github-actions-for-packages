# This file wont do us much good in this location, make sure you change the path as directed to continue!

name: Node CI
on: [push]

# on:
#   push:
#     # branches-ignore:
#     #   - "ci-workflow"
#     #   - "docker-workflow"
#     paths:
#       - "**Dockerfile**"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: npm install and build webpack
        env:
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
          local_dir: "public/"
          remote_dir: "~"
        run: |
          npm install
          npm run build
          mkdir ~/.ssh
          echo "$remote_key" > ~/.ssh/gh_actions_key
          chmod 600 ~/.ssh/gh_actions_key
          rsync -avzr --delete -e "ssh -p ${remote_port} -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no" ${local_dir} ${remote_user}@${remote_host}:~

          
          
#       - uses: actions/upload-artifact@master
#         with:
#           name: webpack artifacts
#           path: public/
#       - name: rsync deployments
#         uses: burnett01/rsync-deployments@4.0
#         with:
#           switches: -avzr --delete
#           path: public
#           remote_path: ~/gh_upload
#           remote_host: ${{ secrets.DEPLOY_HOST }}
#           remote_port: ${{ secrets.DEPLOY_PORT }}
#           remote_user: ${{ secrets.DEPLOY_USER }}
#           remote_key: ${{ secrets.DEPLOY_KEY }}
#   test:
#     runs-on: ubuntu-latest
#     needs: build
#     strategy:
#       matrix:
#         os: [ubuntu-lastest, windows-2016]
#         node-version: [8.x, 10.x]

#     steps:
#       - uses: actions/checkout@v1
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - uses: actions/download-artifact@master
#         with:
#           name: webpack artifacts
#           path: public
#       - name: npm install, and test
#         run: |
#           npm install
#           npm test
#         env:
#           CI: true
#   Build-and-Push-Docker-Image:
#     runs-on: ubuntu-latest
#     needs: test
#     name: Docker Build, Tag, Push

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v1
#     - name: Download built artifact
#       uses: actions/download-artifact@master
#       with:
#         name: webpack artifacts
#         path: public
#     - name: Build, Tag, Push
#       uses: mattdavis0351/actions/docker-gpr@v1.3.0
#       with:
#         repo-token: ${{ secrets.GITHUB_TOKEN }}
#         image-name: tic-tac-toe
